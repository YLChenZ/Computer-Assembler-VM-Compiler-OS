// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    /*
    Not(in=sel[0],out=not0);
    Not(in=sel[1],out=not1);
    Not(in=sel[2],out=not2);

    And(a=not0, b=not1, out=tmp1);//00
    And(a=sel[0], b=not1, out=tmp2);//01
    And(a=not0, b=sel[1], out=tmp3);//10
    And(a=sel[0], b=sel[1], out=tmp4);//11
    
    And(a=tmp1, b=not2, out=t1);//000
    And(a=tmp2, b=not2, out=t2);//001
    And(a=tmp3, b=not2, out=t3);//010
    And(a=tmp4, b=not2, out=t4);///011
    And(a=tmp1, b=sel[2], out=t5);//100
    And(a=tmp2, b=sel[2], out=t6);//101
    And(a=tmp3, b=sel[2], out=t7);//110
    And(a=tmp4, b=sel[2], out=t8);///111

    And(a=in, b=t1, out=a);
    And(a=in, b=t2, out=b);
    And(a=in, b=t3, out=c);
    And(a=in, b=t4, out=d);
    And(a=in, b=t5, out=e);
    And(a=in, b=t6, out=f);
    And(a=in, b=t7, out=g);
    And(a=in, b=t8, out=h);
    */
    /*idea:
    Similar to DMux4Way, sel[2] is used to distinguish between {a,b,c,d} and {e,f,g,h}, 
    while sel[0..1] is used to distinguish between 'abcd' and 'efgh', just with different inputs.
    */
    DMux(in=in, sel=sel[2], a=o1, b=o2);
    DMux4Way(in=o1, sel=sel[0..1], a=a, b=b, c=c, d=d);
    DMux4Way(in=o2, sel=sel[0..1], a=e, b=f, c=g, d=h);
}
